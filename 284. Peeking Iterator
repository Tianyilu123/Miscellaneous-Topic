
// Java Iterator interface reference:
// https://docs.oracle.com/javase/8/docs/api/java/util/Iterator.html
class PeekingIterator implements Iterator<Integer> {
    
    private Iterator<Integer> iter;
    private Integer peek;
    
	public PeekingIterator(Iterator<Integer> iterator) {
	    // initialize any member here.
	    iter = iterator;
        peek = null;
	}

    // Returns the next element in the iteration without advancing the iterator.
	public Integer peek() {
        if(peek != null) return peek;
        peek = iter.next();
        return peek;
	}

	// hasNext() and next() should behave the same as in the Iterator interface.
	// Override them if needed.
	@Override
	public Integer next() {
	    if(peek != null) {
            Integer temp = peek;
            peek = null;
            return temp;
        }
        return iter.next();
	}

	@Override
	public boolean hasNext() {
	    if(peek != null) return true;
        return iter.hasNext();
	}
}
